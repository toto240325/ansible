---
- name: "install some packages"
  package:
    name: npm
    state: latest

- name: install repo whos_on_my_network for toto
  tags: repoonly
  ansible.builtin.git: repo={{ item.repo }} dest={{ item.dest }} clone=yes update=no force=no
  with_items:
  - { repo: 'https://github.com/toto240325/fork_of_whos_on_my_network.git', dest: '/home/toto/whos_on_my_network' }
  register: repo_whos

- name: make sure .git/config is set to git@github:toto240325/<prj>.git... instead of https://github.com/toto240325/<prj>.git to allow edit and push back to git
  tags: repowhosonmynetwork
  replace: path="{{ item }}/.git/config" regexp="https://github.com/toto240325" replace="git@github.com:toto240325"
  with_items:
  - "/home/toto/whos_on_my_network"

- name: change ownership
  tags: repoonly
  file: path={{ item.path }} owner="toto" group="toto" state=directory recurse=yes mode="u=rwX,g=rX,o=rX"
  with_items:
  - { path: "/home/toto/whos_on_my_network" }
  #register: output_chown
  when: repo_whos.changed

# - name: "install pip flask (for whos_on_my_network)"
#   pip:
#     name: Flask
#     state: latest
#     virtualenv: /home/toto/venv/whos_on_my_network

- name: "after-install of repo of whos_on_my_network (pip requirements)"
  pip:
    requirements: /home/toto/whos_on_my_network/requirements.txt
    virtualenv: /home/toto/venv/whos_on_my_network
  when: repo_whos.changed

- name: "ad hoc shell : cd webapp && npm i && npm run build"
  tags: rebuild_whos
  shell: 
    cmd: 'su -c ". ~/venv/whos_on_my_network/bin/activate && cd /home/toto/whos_on_my_network/webapp && npm i && npm run build" toto'
  register: shell_output
  #when: repo_whos.changed

#- debug: var=shell_output

- name: "initialise DB in separate location"
  file: 
    path: /home/toto/db
    state: directory
    owner: toto
    group: toto
  when: repo_whos.changed

- name: cron job to launch whos_on_my_network watcher under root
  cron:
    user: root
    name: "cron whos_on_my_network watcher"
    special_time: reboot
    #minute: "*/10"
    job: "sleep 90 && . /home/toto/venv/whos_on_my_network/bin/activate && . /home/toto/whos_on_my_network/run_whos_watcher >> /root/whos_on_my_network_watcher.log"

- name: cron job to launch whos_on_my_network webserver under root
  cron:
    user: root
    name: "cron whos_on_my_network_webserver"
    special_time: reboot
    #minute: "*/10"
    job: "sleep 90 && . /home/toto/venv/whos_on_my_network/bin/activate && . /home/toto/whos_on_my_network/run_whos_webserver >> /root/whos_on_my_network_webserver.log"


