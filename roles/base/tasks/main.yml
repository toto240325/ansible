---
- name: make sure known hosts are in /etc/hosts
  tags: debug37
  lineinfile:
    dest: /etc/hosts
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
  loop:
    - { regexp: '^192.168.0.1', line: '192.168.0.1 voo', state: 'present' }
    - { regexp: '^192.168.0.4', line: '192.168.0.4 webcam_chalet', state: 'present' }
    - { regexp: '^192.168.0.6', line: '192.168.0.6 hp5520', state: 'present' }
    - { regexp: '^192.168.0.9', line: '192.168.0.9 alarm_system', state: 'present' }
    - { regexp: '^192.168.0.40', line: '192.168.0.40 ps4', state: 'present' }
    - { regexp: '^192.168.0.49', line: '192.168.0.49 webcam_jardin', state: 'present' }
    - { regexp: '^192.168.0.50', line: '192.168.0.50 linksysed', state: 'present' }
    - { regexp: '^192.168.0.51', line: '192.168.0.51 ubuntu1', state: 'present' }
    - { regexp: '^192.168.0.81', line: '192.168.0.81 pi1_wifi', state: 'present' }
    - { regexp: '^192.168.0.82', line: '192.168.0.82 pi2_wifi', state: 'present' }
    - { regexp: '^192.168.0.83', line: '192.168.0.83 pi3_wifi', state: 'present' }
    - { regexp: '^192.168.0.84', line: '192.168.0.84 pi4_wifi', state: 'present' }
    - { regexp: '^192.168.0.91', line: '192.168.0.91 pi1_wifi', state: 'present' }
    - { regexp: '^192.168.0.92', line: '192.168.0.92 pi2_wifi', state: 'present' }
    - { regexp: '^192.168.0.93', line: '192.168.0.93 pi3_wifi', state: 'present' }
    - { regexp: '^192.168.0.94', line: '192.168.0.94 pi4_wifi', state: 'present' }
    - { regexp: '^192.168.0.97', line: '192.168.0.97 lenovo_orange', state: 'present' }
    - { regexp: '^192.168.0.99', line: '192.168.0.99 mypc3', state: 'present' }
    - { regexp: '^192.168.0.148', line: '192.168.0.148 nb2502', state: 'present' }


- name: install basic packages
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - ansible
    - ansible-lint
    - curl
    - vim
    - zip
    - unzip
    - tmux
    - p7zip-full
    - git
    - htop
    - python3-pip
    - sqlite3
  #when: ansible_distribution in ["Ubuntu","Debian"] # and ansible_distribution_version == "20.04"
  when: no

- name: install new packages
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - zip
  when: yes
  #when: ansible_distribution in ["Ubuntu","Debian"] # and ansible_distribution_version == "20.04"

- name: sqlite3 by defaut
  #prerequisite:
  #ansible-galaxy collection install community.general
  community.general.alternatives:
    name: sqlite
    path: /usr/bin/pip3
    link: /usr/local/bin/sqlite

- name: python3 by defaut
  #prerequisite:
  #ansible-galaxy collection install community.general
  community.general.alternatives:
    name: python
    path: /usr/bin/python3
    link: /usr/local/bin/python

- name: pip3 by defaut
  #prerequisite:
  #ansible-galaxy collection install community.general
  community.general.alternatives:
    name: pip
    path: /usr/bin/pip3
    link: /usr/local/bin/pip
  when: ansible_facts["nodename"] != "raspberry"

- name: upgrade pip to latest version
  pip:
    name: pip
    executable: pip3
    state: latest
  when: ansible_facts["nodename"] != "raspberry"

- name: "install pip virtualenv"
  pip:
    name: virtualenv
    state: latest
    #virtualenv: /my_app/venv

- include: toto_user.yml
  tags: toto

- include: ansible_user.yml

- include: pi_user.yml
  when: ansible_facts["nodename"] == "raspberry"