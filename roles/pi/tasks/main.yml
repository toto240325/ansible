---
- name: install new packages
  tags: pi_packages
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - python-gpiozero
    - htop
    - virtualenv
    # to solve this error when sending postfix mail from raspbian : "SASL authentication failure: No worthy mechs found"
    - libsasl2-modules

- name: modify default pi password ("raspberry")
  user:
    name: pi
    password: "{{ vault_toto_pw | password_hash('sha512','myOwnSalt') }}"
    update_password: always
    shell: /bin/bash
    state: present
    # apparently not supported : no_log: true

- name: install repos 
  become: true
  ansible.builtin.git: repo={{ item.repo }} dest={{ item.dest }} clone=yes update=no
  with_items:
  - { repo: 'https://github.com/toto240325/frigo.git',            dest: '/home/toto/frigo' }
  - { repo: 'https://github.com/toto240325/utils.git',            dest: '/home/toto/utils' }
  register: output_git

- name: make sure .git/config is set to git@github:toto240325/<prj>.git... instead of https://github.com/toto240325/<prj>.git to allow edit and push back to git
  tags: mygit
  replace: path="{{ item }}/.git/config" regexp="https://github.com/toto240325" replace="git@github.com:toto240325"
  with_items:
  - "/home/toto/frigo"
  - "/home/toto/utils"

- name: change ownership
  tags: debug1
  file: path={{ item.path }} owner="toto" group="toto" state=directory recurse=yes
  with_items:
  - { path: "/home/toto/frigo" }
  - { path: "/home/toto/utils" }
#  register: output_chown

- name: "install pip gpiozero"
  tags: gpiozero
  pip:
    name: gpiozero
    state: latest
    virtualenv: /home/toto/venv/piloop
  #when: ansible_facts["lsb"]["id"] != "Raspbian"

- name: set the MAILTO cron variable
  community.general.cronvar:
    user: root
    name: MAILTO
    value: toto240325@gmail.com
    
# - name: cron job to launch piloop under root
#   tags: piloop
#   cron:
#     user: root
#     name: "cron piloop"
#     special_time: reboot
#     #minute: "*/10"
#     job: "sleep 30; python /home/toto/utils/piloop.py"

# - name: cron job to launch piloop under root
#   tags: piloop
#   cron:
#     user: root
#     name: "cron piloop"
#     special_time: reboot
#     #minute: "*/10"
#     job: "sleep 30; python /home/toto/utils/piloop.py"

# - name: cron job to launch piloop under root
#   tags: piloop
#   cron:
#     user: root
#     name: "cron piloop at a given time"
#     #special_time: reboot
#     minute: "46"
#     hour: "20"
#     job: "python /home/toto/utils/piloop.py"

# - name: cron job to launch piloop under root
#   tags: piloop
#   cron:
#     user: root
#     name: "cron piloop at reboot"
#     special_time: reboot
#     #minute: "00"
#     #hour: "22"
#     job: "python /home/toto/utils/piloop.py"


# - name: piloop under root
#   tags: piloop
#   shell: "sleep 30 && python /home/toto/utils/piloop.py &"
#   # async: 99999
#   # poll: 0


- name: "pip install packages for piloop"
  pip:
    name: gpiozero
    state: latest
    virtualenv: /home/toto/venv/piloop

# - name: "after-install of repo of whos_on_my_network (pip requirements)"
#   pip:
#     requirements: /home/toto/whos_on_my_network/requirements.txt
#     virtualenv: /home/toto/venv/whos_on_my_network
#   when: repo_whos.changed

    
# - name: cron job to launch piloop under root
#   tags: debug49
#   cron:
#     user: root
#     name: "piloop"
#     special_time: reboot
#     #minute: "*/5"
#     #minute: "30"
#     job: "sleep 30 && . /home/toto/venv/frigo/bin/activate && python /user/home/toto/utils/piloop.py  >> /home/toto/piloop.log"
#   # when: ansible_facts["lsb"]["id"] != "Raspbian"



- name: Install requirements
  tags: piloop_req
  pip: 
    requirements: /home/toto/utils/piloop_requirements.txt
    virtualenv: /home/toto/venv/piloop
    virtualenv_python: python3.7

- name: cron job to launch piloop under root
  tags: cron_piloop
  cron:
    user: root
    name: "piloop at reboot"
    special_time: reboot
    #minute: "*/5"
    #minute: "30"
    job: "sleep 20 && . /home/toto/venv/piloop/bin/activate && python /home/toto/utils/piloop.py  >> /home/toto/piloop.log"
  # when: ansible_facts["lsb"]["id"] != "Raspbian"

