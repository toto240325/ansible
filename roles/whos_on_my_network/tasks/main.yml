---
- name: "install some packages"
  package:
    name: npm
    state: latest

- name: install repo whos_on_my_network for toto
  tags: repoonly
  ansible.builtin.git: repo={{ item.repo }} dest={{ item.dest }} clone=yes update=yes force=no
  with_items:
  - { repo: 'https://github.com/toto240325/fork_of_whos_on_my_network.git', dest: '/home/toto/whos_on_my_network' }
  register: repo_whos

- name: change ownership
  tags: repoonly
  file: path={{ item.path }} owner="toto" group="toto" state=directory recurse=yes mode="u=rwX,g=rX,o=rX"
  with_items:
  - { path: "/home/toto/whos_on_my_network" }
  #register: output_chown
  when: repo_whos.changed

- name: "install pip flask (for whos_on_my_network)"
  pip:
    name: Flask
    state: latest
    virtualenv: /home/toto/Envs/whos_on_my_network

- name: "after-install of repo of whos_on_my_network (pip requirements)"
  pip:
    requirements: /home/toto/whos_on_my_network/requirements.txt
    virtualenv: /home/toto/Envs/whos_on_my_network
  when: repo_whos.changed

- name: "ad hoc shell : cd webapp && npm i && npm run build"
  remote_user: toto
  shell: ". ~/Envs/whos_on_my_network/bin/activate && cd /home/toto/whos_on_my_network/webapp && npm i && npm run build"
  register: shell_output
  when: repo_whos.changed

#- debug: var=shell_output

- name: "initialise DB in separate location"
  file: 
    path: /home/toto/db
    state: directory
  when: repo_whos.changed


