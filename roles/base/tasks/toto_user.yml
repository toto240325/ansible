---

#- debug: msg="debug test"
#
#- name: shell test
#  shell: pwd
#  register: myoutput
#
#- debug: var=myoutput

- name: create toto user
  tags: debug_create_toto
  user:
    name: toto
    #password: "{{ vault_toto_pw }}"
    password: "{{ vault_toto_pw | password_hash('sha512','myOwnSalt') }}"
    #password: "{{ 'password' | password_hash('sha512') }}"
    update_password: on_create
    shell: /bin/bash
    state: present
    # apparently not supported : no_log: true

- name: add ssh key
  authorized_key: user=toto key="{{ item }}" state=present
  with_items: 
      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPplB13Opukct+t9O1nbRskrsFSnHPIktMYLuDjilXSV toto@local
      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJEa4zZ/C4s4rNNWk6raYFpLH3XVKh393wNX1iWTCcNG toto240325@gmail.com

- name: check if bashrc exists or not
  tags: debug_bashrc
  stat:
    path: "/home/toto/.bash_profile"
  register: bash_profile_exists

- name: ensure .bashrc is run if it exists (wheter interactive logon or not)
  tags: debug_bashrc
  blockinfile:
    dest : /home/toto/.bash_profile
    block: |
      # if running bash
      if [ -n "$BASH_VERSION" ]; then
          # include .bashrc if it exists
          if [ -f "$HOME/.bashrc" ]; then
          . "$HOME/.bashrc"
          fi
      fi
  when: bash_profile_exists == true

- name: ensure .bashrc_conda is run (wheter interactive logon or not)
  tags: debug_bashrc
  blockinfile:
    dest : /home/toto/.bashrc
    block: |
      # this is not the proper way to do this I guess; to be fixed
      . /home/toto/.bashrc_conda
    insertbefore: BOF


- name: Add miniconda bin to path (in .bash_profile)
  tags: debug_bash_profile
  become: True
  lineinfile:
    path: "/home/toto/.bash_profile"
    state: present
    #regexp: "^export PATH=/opt/conda/bin"
    #line: '....'
    line: 'export PATH=/opt/conda/bin:$PATH'
  when: bash_profile_exists == true

- name: Add miniconda bin to path (in .bash_profile)
  tags: debug_bash_profile
  become: True
  lineinfile:
    path: "/home/toto/.bashrc"
    state: present
    #regexp: "^export PATH=/opt/conda/bin"
    #line: '....'
    line: 'export PATH=/opt/conda/bin:$PATH'


- name: add sudoers file for toto
  copy:
    src: sudoer_toto
    dest: /etc/sudoers.d/toto
    owner: root
    group: root
    mode: '0440'

- name: set ownership and acces rights .ssh
  tags: fix_ownership_ssh
  become: True
  file:
    path: /home/toto/.ssh
    state: directory
    owner: toto
    mode: '0700'


- name: copy basic files to user toto - id_ed25519_toto.pub, id_ed25519_toto, .vimrc, .tmux.conf, .bash_aliases
  tags: debugv
  copy: src={{ item.src }} dest={{ item.dest }} mode={{ item.mode }} owner=toto group=toto
  with_items:
  - { src: 'id_ed25519_toto.pub',    dest: '/home/toto/.ssh/',  mode: '0644' }
  - { src: '~/.ssh/id_ed25519_toto', dest: '/home/toto/.ssh/',  mode: '0600' }
  - { src: '~/.ssh/vault-key',       dest: '/home/toto/.ssh/',  mode: '0600' }
  - { src: '.vimrc',                 dest: '/home/toto/',       mode: '0644' }
  - { src: '.tmux.conf',             dest: '/home/toto/',       mode: '0644' }
  - { src: '.bash_aliases',          dest: '/home/toto/',       mode: '0644' }
  - { src: '.bashrc_conda',          dest: '/home/toto/',       mode: '0644' }

#this one doesn't work !!!!!
# - name: setup some git global variables
#   tags: debug2
#   #remote_user: toto
#   #community.general.git_config: repo="/home/toto/" scope=global list_all=yes
#   community.general.git_config: repo="/home/toto/.gitconfig" name={{ item.name }} value={{ item.value }} #scope=global 
#   with_items:
#     - { name: 'user.name',  value: 'toto240325' }
#     - { name: 'user.email', value: 'toto240325@gmail.com' }
#   register: myoutput

- name: setup some git global variables
  tags: debug2
  lineinfile:
    dest: /home/toto/.gitconfig
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    insertafter: "[user]"
    state: "{{ item.state }}"
    create: yes
  loop:
    - { regexp: '^[user]', line: '[user]', state: 'present' }
    - { regexp: '^.*email', line: '  email = toto240325@gmail.com', state: 'present' }
    - { regexp: '^.*name', line: '  name = toto240325', state: 'present' }
  # register: myoutput

# - debug: var=myoutput
#   tags: debug2

- name: install repo utils for toto 
  become: true
  tags: debug1
  ansible.builtin.git: repo={{ item.repo }} dest={{ item.dest }} clone=yes update=no
  with_items:
  - { repo: 'https://github.com/toto240325/utils.git',              dest: '/home/toto/utils' }
  - { repo: 'https://github.com/toto240325/ansible.git',           dest: '/home/toto/ansible' }
  #- { repo: 'https://github.com/toto240325/whos_on_my_network.git', dest: '/home/toto/whos_on_my_network' }
  # - { repo: 'https://github.com/toto240325/monitor.git',            dest: '/var/www/monitor' }
  # - { repo: 'https://github.com/toto240325/watchdog.git',            dest: '/home/toto/watchdog' }
  register: output_git

- name: change ownership repos
  tags: debug1
  file: path={{ item.path }} owner="toto" group="toto" state=directory recurse=yes
  with_items:
  - { path: "/home/toto/utils" }
  - { path: "/home/toto/ansible" }
#  register: output_chown


# - name: make sure .git/config is set to git@github:toto240325/<prj>.git... instead of https://github.com/toto240325/<prj>.git to allow edit and push back to git
#   tags: mygit
#   replace:
#       path: /home/toto/utils/.git/config
#       regexp: "https://github.com/toto240325"
#       replace: "git@github.com:toto240325"

- name: make sure .git/config is set to git@github:toto240325/<prj>.git... instead of https://github.com/toto240325/<prj>.git to allow edit and push back to git
  tags: mygit
  replace: path="{{ item }}/.git/config" regexp="https://github.com/toto240325" replace="git@github.com:toto240325"
  with_items:
  - "/home/toto/utils"
  - "/home/toto/ansible"
  # - "/var/www/monitor"
  # - "/home/toto/watchdog"

- name: make sure the github hosts are known
  tags: github_keys
  shell: "ssh-keyscan github.com >> /home/toto/.ssh/known_hosts"

- name: set ownership and acces rights known_hosts
  tags: fix_ownership_knownhosts
  become: True
  file:
    path: /home/toto/.ssh/known_hosts
    owner: toto
    group: toto
    mode: '0600'

# - name: set ownership of log files (some log files are create by root in /home/toto)
#   tags: fix_ownership_logs
#   become: True
#   file: path="/home/toto/{{ item }}" owner=toto group=toto
#     # path: /home/toto/watchdog.log
#     # owner: toto
#     # group: toto
#   with_items:
#   - watchdog.log
#   - watchdog.txt
#   - misc.log

- name: cron job to update git utils
  tags: pull_repos
  cron:
    user: toto
    name: "pull_utils"
    special_time: reboot
    #minute: "39"
    #hour: "22"
    job: "sleep 30 && cd ~/utils && git pull >> ~/misc.log"
  # when: ansible_facts["lsb"]["id"] != "Raspbian"

- name: cron job to update git ansible
  tags: pull_repos
  cron:
    user: toto
    name: "pull_ansible"
    special_time: reboot
    #minute: "43"
    #hour: "22"
    job: "sleep 30 && cd ~/ansible && git pull >> ~/misc.log"
  # when: ansible_facts["lsb"]["id"] != "Raspbian"

- name: force git pull utils
  tags: force_pull
  shell:
    cmd: 'su -c "cd ~/utils && date >> ~/misc.log && git pull https://github.com/toto240325/utils.git >> ~/misc.log" toto'
  
- name: force git pull ansible
  tags: force_pull
  shell:
    cmd: 'su -c "cd ~/ansible && date >> ~/misc.log && git pull https://github.com/toto240325/ansible.git >> ~/misc.log" toto'
  
- name: change ownership
  tags: debug1
  file: path={{ item.path }} owner="toto" group="toto" state=directory recurse=yes
  with_items:
  - { path: "/home/toto/utils" }
  - { path: "/home/toto/ansible" }
  #- { path: "/home/toto/whos_on_my_network" }
  #- { path: "/home/toto/monitor" }
  #- { path: "/var/www/monitor" }
#  register: output_chown

# - name: "install ansible requirements"
#   tags: debug75
#   #become_user: toto
#   command: sudo su toto; ansible-galaxy install -r ~/ansible/requirements.yml
#   #when: ansible_facts["os_family"] != "Windows"


# - name: copy ansible-pull script
#   tags: debug12
#   template:
#     src: "files/run_ansible_pull.sh.j2"
#     dest: "/home/toto/run_ansible_pull.sh"
#     owner: toto
#     group: toto
#     mode: '0755'

- name: set the MAILTO cron variable
  tags: debug67
  community.general.cronvar:
    user: toto
    name: MAILTO
    value: toto240325@gmail.com


- name: install cron job for toto (ansible-pull)
  tags: debug12
  cron:
    user: toto
    name: "ansible provision"
    hour: "21"
    minute: "00"
    #job: "/home/toto/run_ansible_pull.sh >> ~/ansible-pull.log"
    job: "/usr/bin/ansible-pull -o -U https://github.com/toto240325/ansible.git >> ~/ansible-pull.log"


#- debug: var=output_chown
#  tags: debug1

#- name: install cron job for toto
#  cron:
#    user: toto
#    name: "test toto cron"
#    minute: "*/10"
#    job: "/usr/bin/ansible-pull -o -U https://github.com/toto240325/ansible_pull_tutorial.git > /dev/null"

