---
# ansible all --limit 192.168.0.51 -u vagrant -m "shell" -a "ls -al"
# ansible-playbook site.yml --vault-password-file  ~/.ssh/vault-key # until ansible user created on target and accessible via ssh key
# ansible-playbook site.yml --tags apache
# ansible-playbook site.yml --limit ubuntu0
# ansible-playbook site.yml --limit bootstrap
# ansible-playbook site.yml  --tags=bootstrap --skip-tags=always
# ansible-playbook site.yml  --tags=bootstrap --skip-tags=always --list-tasks
# ansible-playbook --limit bootstrap site.yml --ask-become-pass --tags=bootstrap --skip-tags=always


- hosts: all
  become: true
  pre_tasks:

#  - name: update repository index (CentOS)
#    tags: always
#    dnf:
#      update_cache: yes
#    changed_when: false
#    when: ansible_distribution == "CentOS"
#
  - name: update repository index (Ubuntu)
    tags: always
    apt:
      update_cache: yes
    changed_when: false
    when: ansible_distribution == "Ubuntu"

- hosts: all
  tags: all
  become: true
  roles:
    - base
   
- hosts: vagrant
  tags: vagrant
  become: true
  roles:
    - vagrant

#- hosts: test
#  tags: test
#  become: true
#  roles:
#    - test
#
#- hosts: bootstrap
#  tags: bootstrap
#  become: true
#  roles:
#    - bootstrap
#
#- hosts: ansible_servers
#  tags: ansible_servers
#  become: true
#  roles:
#    - ansible_servers
#
#- hosts: workstations
#  tags: workstations
#  become: true
#  roles:
#    - workstations
#
#- hosts: web_servers
#  tags: web_servers
#  become: true
#  roles:
#    - web_servers
#
#- hosts: db_servers
#  tags: db_servers
#  become: true
#  roles:
#    - db_servers
#
#- hosts: file_servers
#  tags: file_servers
#  become: true
#  roles:
#    - file_servers

##-------------------------------------------------
#- hosts: all
#  become: true
#  vars_files:
#  - ~/ansible/info.yml
#
#  pre_tasks:
#
##  - debug:
##      var: ansible_facts["cmdline"]
##  - debug:
##      var: ansible_facts["machine"]
##  - debug:
##      var: ansible_facts["machine"]|type_debug
##  - debug:
##      var: ansible_distribution
#
## gather_facts: no
##
#
#  - name: install updates (Ubuntu) (and this is my {{ title }}
#    tags: always
#    apt:
#      upgrade: dist
#      update_cache: yes
#    when: ansible_distribution in ["Ubuntu","Debian"] # and ansible_distribution_version == "20.04"
#
#  tasks:
#  - name: install basic packages
#    package:
#      name:
#        - vim
#        - unzip
#        - tmux
#        - p7zip-full        
#        - git
#      state: latest
#    when: ansible_distribution in ["Ubuntu","Debian"] # and ansible_distribution_version == "20.04"
#
#- hosts: toto_user
#  vars_files:
#  - ~/ansible/info.yml
#  become: true
#  gather_facts: no
#  tasks:
#
#  - name: create toto user 
#    user:
#      name: toto
#      password: "{{ toto_password | password_hash('sha512') }}"
#      #password: "{{ 'password' | password_hash('sha512') }}"
#      shell: /bin/bash
#      state: present
#      groups: root
#      append: yes
#
#  - name: copy id_ed25519_toto
#    #tags: always
#    copy:
#       src: ~/.ssh/id_ed25519_toto
#       dest: /home/toto/.ssh/ 
#       owner: toto
#       group: toto
#       mode: 0600
#
#  - name: copy id_ed25519_toto.pub
#    #tags: always
#    copy:
#       src: ~/.ssh/id_ed25519_toto.pub
#       dest: /home/toto/.ssh/ 
#       owner: toto
#       group: toto
#       mode: 0644
#
#  - name: add ssh key for toto
#    authorized_key:
#      user: toto
#      key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJEa4zZ/C4s4rNNWk6raYFpLH3XVKh393wNX1iWTCcNG toto240325@gmail.com"
#
#  - name: copy .vimrc
#    tags: always
#    copy:
#       src: .vimrc
#       dest: /home/toto/ 
#       owner: toto
#       group: toto
#       mode: 0644
#
#  - name: copy .tmux.conf
#    tags: always
#    copy:
#       src: .tmux.conf
#       dest: /home/toto/ 
#       owner: toto
#       group: toto
#       mode: 0644
#
#  - name: copy my bash aliases
#    tags: always
#    copy:
#       src: my-bash-aliases
#       dest: /home/toto/.bash_aliases 
#       owner: toto
#       group: toto
#       mode: 0644
#
#  - name : git clone utils
#    ansible.builtin.git:
#      #repo: git@github.com:toto240325/utils.git
#      repo: https://github.com/toto240325/utils.git
#      dest: /home/toto/utils
#      #key_file: /home/toto/.ssh/id_ed25519_toto
#
#- hosts: web_servers
#  become: true
#  tasks:
#
#  - name: install apache2 package (Ubuntu)
#    tags: apache
#    apt:
#      name:
#        - apache2
#        - libapache2-mod-php
#      state: latest
#    when: ansible_distribution in ["Ubuntu","Debian"] # and ansible_distribution_version == "20.04"
#
#- hosts: db_servers
#  become: true
#  tasks:
#
#  - name: install mariadb server
#    tags: db
#    apt:
#      name: mariadb-server
#      state: latest
#    when: ansible_distribution in ["Ubuntu","Debian"] # and ansible_distribution_version == "20.04"
#
#- hosts: file_servers
#  become: true
#  tasks:
#
#  - name: install samba package
#    package:
#      name: samba
#      state: latest
#
#- hosts: ubuntu0
#  become: true
#  tasks:
#
#  - name: install 7z
#    package:
#      name: p7zip-full
#      state: latest

