---
- name: install new packages
  tags: pool_packages_prod
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - livemedia-utils  # openRTSP
    - ffmpeg
    - tesseract-ocr


- name: Create/update /opt/pool
  tags: deploy_pool_prod
  file:
    path: /opt/pool
    state: directory
    owner: root
    mode: '0755'

- name: install latest version of pool in /opt/pool
  tags: deploy_pool_prod
  shell: "curl -L https://api.github.com/repos/toto240325/pool/tarball | tar xzvf - --one-top-level=/opt/pool --strip-components 1"

- name: install latest version of utils in /opt/utils (there is a dependency of pool on utils)
  tags: deploy_utils_prod_for_pool
  shell: "curl -L https://api.github.com/repos/toto240325/utils/tarball | tar xzvf - --one-top-level=/opt/utils --strip-components 1"

- name: Install requirements for pool
  tags: pool_req_prod
  pip: 
    requirements: /opt/pool/requirements.txt
    virtualenv: /opt/pool/venv
    #virtualenv_python: python3.7
    virtualenv_python: python3

- name: check if pool params.py already exists (pool prod)
  tags: pool_params_prod
  stat:
    path: /opt/pool/params.py
  register: stat_result

- name: "Copy params.py for pool prod"
  tags: pool_params_prod
  template:
    src: "files/params.py.j2"
    dest: "/opt/pool/params.py"
  when: not stat_result.stat.exists

- name: cron job to launch pool under root
  tags: pool_cron
  cron:
    user: root
    name: "pool"
    #special_time: reboot
    minute: "*/5"
    #minute: "30"
    job: "export PYTHONPATH=/opt/utils:$PYTHONPATH && . /opt/pool/venv/bin/activate && python /opt/pool/pool.py  | tee -a /opt/pool/pool_full.log >> /opt/pool/pool.log"
  #when: ansible_facts["lsb"]["id"] == "Raspbian"

# - name: make sure the parameters (monitor_server, main_pool) in prod have the right value
#   tags: update_pool_params_prod
#   lineinfile:
#     dest: "{{ item.dest }}"
#     regexp: "{{ item.regexp }}"
#     line: "{{ item.line }}"
#     state: "{{ item.state }}"
#     create: yes
#   loop:
#     # - { dest: '/opt/pool/params.py', regexp: '^main_pool', line: 'main_pool = "{{ vars_main_pool }}"', state: 'present' }
#   # register: myoutput


