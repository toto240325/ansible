---
# - name: debug "nodename2"
#   tags: debug21
#   debug: var=ansible_facts["lsb"]["id"]

- name: Set timezone to Europe/Brussels
  community.general.timezone:
    name: Europe/Brussels

- name: make sure known hosts are in /etc/hosts
  tags: debug37
  lineinfile:
    dest: /etc/hosts
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
  loop:
    - { regexp: '^192.168.0.1 ', line: '192.168.0.1 voo', state: 'present' }
    - { regexp: '^192.168.0.4 ', line: '192.168.0.4 webcamChalet', state: 'present' }
    - { regexp: '^192.168.0.6 ', line: '192.168.0.6 hp5520', state: 'present' }
    - { regexp: '^192.168.0.9 ', line: '192.168.0.9 alarmSystem', state: 'present' }
    - { regexp: '^192.168.0.40', line: '192.168.0.40 ps4', state: 'present' }
    - { regexp: '^192.168.0.49', line: '192.168.0.49 webcamJardin', state: 'present' }
    - { regexp: '^192.168.0.50', line: '192.168.0.50 linksysed', state: 'present' }
    - { regexp: '^192.168.0.51', line: '192.168.0.51 ubuntu1', state: 'present' }
    
    - { regexp: '^192.168.0.61', line: '192.168.0.61 pi1Eth0', state: 'present' }
    - { regexp: '^192.168.0.71', line: '192.168.0.71 pi1Wlan0', state: 'present' }
    - { regexp: '^192.168.0.81', line: '192.168.0.81 pi1Wlan1', state: 'present' }
    
    - { regexp: '^192.168.0.62', line: '192.168.0.62 pi1Eth0', state: 'present' }
    - { regexp: '^192.168.0.72', line: '192.168.0.72 pi1Wlan0', state: 'present' }
    - { regexp: '^192.168.0.82', line: '192.168.0.82 pi1Wlan1', state: 'present' }
    
    - { regexp: '^192.168.0.63', line: '192.168.0.63 pi1Eth0', state: 'present' }
    - { regexp: '^192.168.0.73', line: '192.168.0.73 pi1Wlan0', state: 'present' }
    - { regexp: '^192.168.0.83', line: '192.168.0.83 pi1Wlan1', state: 'present' }
    
    - { regexp: '^192.168.0.64', line: '192.168.0.64 pi1Eth0', state: 'present' }
    - { regexp: '^192.168.0.74', line: '192.168.0.74 pi1Wlan0', state: 'present' }
    - { regexp: '^192.168.0.84', line: '192.168.0.84 pi1Wlan1', state: 'present' }
    
    # - { regexp: '^192.168.0.65', line: '192.168.0.65 pi1Eth0', state: 'present' }
    # - { regexp: '^192.168.0.75', line: '192.168.0.75 pi1Wlan0', state: 'present' }
    # - { regexp: '^192.168.0.85', line: '192.168.0.85 pi1Wlan1', state: 'present' }
    
    # - { regexp: '^192.168.0.66', line: '192.168.0.66 pi1Eth0', state: 'present' }
    # - { regexp: '^192.168.0.76', line: '192.168.0.76 pi1Wlan0', state: 'present' }
    # - { regexp: '^192.168.0.86', line: '192.168.0.86 pi1Wlan1', state: 'present' }
    
    - { regexp: '^192.168.0.68', line: '192.168.0.68 pi1Eth0', state: 'present' }
    - { regexp: '^192.168.0.78', line: '192.168.0.78 pi1Wlan0', state: 'present' }
    - { regexp: '^192.168.0.88', line: '192.168.0.88 pi1Wlan1', state: 'present' }
    
    - { regexp: '^192.168.0.97', line: '192.168.0.97 lenovoOrange', state: 'present' }
    - { regexp: '^192.168.0.99', line: '192.168.0.99 mypc3', state: 'present' }
    - { regexp: '^192.168.0.148', line: '192.168.0.148 nb2502', state: 'present' }
  when: yes

- name: install basic packages
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - ansible
    - ansible-lint
    - curl
    - vim
    - zip
    - unzip
    - tmux
    - p7zip-full
    - git
    - htop
    - python3-pip
    - sqlite3
  #when: ansible_distribution in ["Ubuntu","Debian"] and ansible_distribution_version == "20.04"
  #when: no


- name: set the MAILTO cron variable
  tags: debug67
  community.general.cronvar:
    user: root
    name: MAILTO
    value: toto240325@gmail.com

- name: dummy weekly cron
  tags: debugcron2
  cron:
    user: root
    name: "dummy cron to check cron email is working"
    job: "dummy job to check cron email still works"
    # minute: "*/5"
    day: "1"
    hour: "09"
    minute: "30"

- name: install new packages
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - network-manager
  when: yes
  #when: ansible_distribution in ["Ubuntu","Debian"] # and ansible_distribution_version == "20.04"

- name: sqlite3 by defaut
  #prerequisite:
  #ansible-galaxy collection install community.general
  community.general.alternatives:
    name: sqlite
    path: /usr/bin/pip3
    link: /usr/local/bin/sqlite

- name: python3 by defaut
  #prerequisite:
  #ansible-galaxy collection install community.general
  community.general.alternatives:
    name: python
    path: /usr/bin/python3
    link: /usr/local/bin/python

- name: pip3 by defaut
  #prerequisite:
  #ansible-galaxy collection install community.general
  community.general.alternatives:
    name: pip
    path: /usr/bin/pip3
    link: /usr/local/bin/pip
  when: ansible_facts["lsb"]["id"] != "Raspbian"

- name: upgrade pip to latest version
  pip:
    name: pip
    executable: pip3
    state: latest
  when: ansible_facts["lsb"]["id"] != "Raspbian"

- name: "install pip virtualenv"
  pip:
    name: virtualenv
    state: latest
    #virtualenv: /my_app/venv
  when: ansible_facts["lsb"]["id"] != "Raspbian"

- include: toto_user.yml
  tags: toto

- include: ansible_user.yml

- include: pi_user.yml
  when: ansible_facts["nodename"] == "raspberry"