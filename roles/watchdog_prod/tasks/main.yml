---
- name: Create/update /opt/watchdog
  tags: deploy_watchdog_prod
  file:
    path: /opt/watchdog
    state: directory
    owner: root
    mode: '0755'

- name: install latest version of watchdog in /opt/watchdog
  tags: deploy_watchdog_prod
  shell: "curl -L https://api.github.com/repos/toto240325/watchdog/tarball | tar xzvf - --one-top-level=/opt/watchdog --strip-components 1"

- name: install latest version of utils in /opt/utils (there is a dependency of watchdog on utils)
  tags: deploy_utils_prod_for_watchdog
  shell: "curl -L https://api.github.com/repos/toto240325/utils/tarball | tar xzvf - --one-top-level=/opt/utils --strip-components 1"

# - name: install repo watchdog for toto
#   tags: repowatchdog
#   ansible.builtin.git: repo={{ item.repo }} dest={{ item.dest }} clone=yes update=no force=no
#   with_items:
#   - { repo: 'https://github.com/toto240325/watchdog.git', dest: '/opt/watchdog' }
#   register: repo_watchdog_prod

# - name: make sure .git/config is set to git@github:toto240325/<prj>.git... instead of https://github.com/toto240325/<prj>.git to allow edit and push back to git
#   tags: repowatchdog
#   replace: path="{{ item }}/.git/config" regexp="https://github.com/toto240325" replace="git@github.com:toto240325"
#   with_items:
#   - "/opt/watchdog"

# - name: set ownership of log files (some log files are create by root in /home/toto)
#   tags: fix_ownership_logs
#   become: True
#   file: path="/opt/watchdog" owner=toto group=toto state=touch
#   with_items:
#   - watchdog.log
#   - watchdog.txt

- name: Install requirements for watchdog
  tags: watchdog_req_prod
  pip: 
    requirements: /opt/watchdog/requirements.txt
    virtualenv: /opt/watchdog/venv
    #virtualenv_python: python3.7
    virtualenv_python: python3
    # virtualenv_site_packages: yes
  #become_user: toto

- name: check if watchdog params.py already exists (watchdog prod)
  tags: watchdog_params_prod
  stat:
    path: /opt/watchdog/params.py
  register: stat_result

- name: "Copy params.py for watchdog prod"
  tags: watchdog_params_prod
  template:
    src: "files/params.py.j2"
    dest: "/opt/watchdog/params.py"
  when: not stat_result.stat.exists

- name: update the list of server that mustBeUp
  tags: update_mustBeUp
  # do this after having updated this list : 
  # aps -t=update_mustBeUp -l sd3,sd8,sd9,ubuntu2
  blockinfile:
    path: /opt/watchdog/params.py
    block: |
      mustBeUp = [
        #("sd4",             "192.168.0.94"),
        #("vayo",            "192.168.0.45"),
        # ("sd3-73",             "192.168.0.73"),
        ("sd3-83",             "192.168.0.83"),
        #("sd5",             "192.168.0.75"),
        ("sd8",             "192.168.0.78"),
        # ("sd9-79",             "192.168.0.79"),
        # ("sd9-89",             "192.168.0.89"),
        ("voo_router",      "192.168.0.1"),
        ("webcamChalet",    "192.168.0.4"),
        #("smartTV_LG_TN510S","192.168.0.5"),
        # ("HP5520 printer",  "192.168.0.6"),
        ("alarmSystem",     "192.168.0.2"),
        ("linksysed_router","192.168.0.50")
      ]
    marker: "# {mark} ANSIBLE MANAGED BLOCK watchdog_mustBeUp"
    #insertbefore: 
  #notify: do_this_after_mustBeUp_updated


# - name: change ownership
#   tags: repowatchdog
#   file: path={{ item.path }} owner="toto" group="toto" state=directory recurse=yes mode="u=rwX,g=rX,o=rX"
#   with_items:
#   - { path: "/opt/watchdog" }
#   #register: output_chown
#   when: repo_watchdog.changed

# - name: force git pull watchdog
#   tags: force_pull_watchdog
#   shell:
#     cmd: 'su -c "cd ~/watchdog && date >> ~/misc.log && git pull https://github.com/toto240325/watchdog.git >> ~/misc.log" toto'

# - name: set the SHELL cron variable
#   tags: debug49
#   community.general.cronvar:
#     user: toto
#     name: SHELL
#     value: /bin/bash
    
# - name: set the BASH_ENV cron variable
#   tags: debug49
#   community.general.cronvar:
#     user: toto
#     name: BASH_ENV
#     value: /home/toto/.bashrc_conda
#     insertafter: SHELL
    
# - name: cron job to launch watchdog under toto
#   tags: debug49
#   cron:
#     user: toto
#     name: "watchdog"
#     #special_time: reboot
#     #minute: "*/5"
#     minute: "30"
#     job: "conda activate /home/toto/.conda/envs/watchdog; python /home/toto/watchdog/watchdog.py 2>&1 >> /home/toto/watchdog.log; conda deactivate"
#   when: ansible_facts["lsb"]["id"] != "Raspbian"

# - name: change ownership to toto:toto
#   tags: debug111
#   file: path={{ item.path }} owner="toto" group="toto" state=directory recurse=yes
#   with_items:
#   - { path: "/home/toto/conda/" }
#   when: ansible_facts["lsb"]["id"] != "Raspbian"

- name: cron job to launch watchdog under root
  tags: watchdog_cron
  cron:
    user: root
    name: "watchdog"
    #special_time: reboot
    minute: "*/5"
    #minute: "30"
    job: "export PYTHONPATH=/opt/utils:$PYTHONPATH && . /opt/watchdog/venv/bin/activate && python /opt/watchdog/watchdog.py  | tee -a /opt/watchdog/watchdog_full.log >> /opt/watchdog/watchdog.log"
  #when: ansible_facts["lsb"]["id"] == "Raspbian"

- name: make sure the parameters (monitor_server, main_watchdog) in prod have the right value
  tags: update_watchdog_params_prod
  lineinfile:
    dest: "{{ item.dest }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: "{{ item.state }}"
    create: yes
  loop:
    - { dest: '/opt/watchdog/params.py', regexp: '^monitor_server', line: 'monitor_server = "{{ vars_monitor_server }}"', state: 'present' }
    - { dest: '/opt/watchdog/params.py', regexp: '^main_watchdog', line: 'main_watchdog = "{{ vars_main_watchdog }}"', state: 'present' }
  # register: myoutput


