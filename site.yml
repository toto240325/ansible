---
# ansible all --limit 192.168.0.51 -u vagrant -m "shell" -a "ls -al"
# ansible -v webservers -m copy -a "src=dist/ dest=/var/www/html" -i inventory --become
# ansible-galaxy collection install community.general
# ansible-galaxy install -r requirements.yml # apparently this doesn't install collections ??
# ansible-galaxy collection install community.general
# ansible-playbook site.yml --vault-password-file  ~/.ssh/vault-key # until ansible user created on target and accessible via ssh key
# ansible-playbook site.yml --tags apache
# ansible-playbook site.yml --limit ubuntu0
# ansible-playbook site.yml --limit 
# ansible-playbook site.yml  --tags=db_servers --skip-tags=always
# ansible-playbook site.yml  --tags=db_servers --skip-tags=always --list-tasks
# ansible-playbook site.yml --limit bootstrap --tags=bootstrap --skip-tags=always --ask-become-pass 
# ansible-vault edit ~/ansible/info.yml --vault-password-file  ~/.ssh/vault-key
# ansible-vault edit ~/ansible/vault.yml --vault-password-file  ~/.ssh/vault-key
# ansible-vault edit ~/ansible/roles/watchdog/vars/main.yml --vault-password-file  ~/.ssh/vault-key
#

# todo
# fix IP address server

# - hosts: 192.168.0.51
#   gather_facts: true
#   tasks:
#   # - name: "display all ansible_facts"
#   #   debug: var=ansible_facts
#   #   tags: debugfacts

#   - name: "check allfacts"
#     tags: debugfacts
#     debug: var=ansible_facts

#   - debug: var=hostvars[inventory_hostname]['ansible_default_ipv4']['address']


# - hosts: 192.168.0.52
#   tags: debug76
#   gather_facts: true
#   vars_files:
#   - ~/ansible/vault.yml
#   become: true
#   tasks:
#   - shell: "ls -al"
#     register: myoutput
#   - debug: var=myoutput

# - name: "register facts"
#   command: echo "test"
#   register: allfacts


- hosts: all
  tags: always
  gather_facts: true
  become: true

  pre_tasks:
  # - name: "debug inventory"
  #   debug: var=inventory_hostname

  # - debug: var=ansible_facts["machine"]
  #   tags: debugecho

#  - debug: var=ansible_facts
  # - debug: var=ansible_facts["os_family"]
  #   tags: debugecho

  # - name: "test echo commmand"
  #   tags: debugecho
  #   command: echo "this is a test of the echo command"
  #   register: cmdoutput
  #   when: ansible_facts["os_family"] != "Windows"


  # - debug: var=cmdoutput
  #   tags: debugecho
      
#  - name: update repository index (CentOS)
#    tags: always
#    dnf:
#      update_cache: yes
#    changed_when: false
#    when: ansible_distribution == "CentOS"
#
 
  # - tags: debug40
  #   debug:
  #     var: ansible_facts
  #     #var: ansible_facts["cmdline"]


  - name: update repository index (Ubuntu)
    tags: debug42
    apt:
      update_cache: yes
      upgrade: "yes"
    changed_when: false
    #when: ansible_distribution == "Ubuntu"
    #when: ansible_os_family != "Windows"
  
- hosts: all
  tags: facts
  gather_facts: true
  vars_files:
  - ~/ansible/vault.yml
  become: true

- hosts: all
  tags: base
  gather_facts: true
  vars_files:
  - ~/ansible/vault.yml
  become: true
  roles:
    - base

- hosts: bootstrap
  gather_facts: true
  vars_files:
  - ~/ansible/vault.yml
  tags: bootstrap
  become: true
  roles:
  - bootstrap

- hosts: conda
  gather_facts: true
  vars_files:
  - ~/ansible/vault.yml
  tags: conda
  become: true
  roles:
  - conda

- hosts: pi
  gather_facts: true
  vars_files:
  - ~/ansible/vault.yml
  tags: pi
  become: true
  roles:
  - pi


- hosts: postfix
  vars_files:
  - ~/ansible/vault.yml
  gather_facts: true
  tags: postfix
  become: true
  roles:
    - geerlingguy.postfix
    - postfix
   
- hosts: vagrant
  #gather_facts: false
  tags: vagrant
  become: true
  roles:
    - vagrant

- hosts: x_servers
  gather_facts: false
  tags: x_servers
  become: true
  roles:
    - x_servers

- hosts: ansible_servers
  gather_facts: false
  tags: ansible_servers
  become: true
  roles:
    - ansible_servers

#- hosts: workstations
#  tags: workstations
#  become: true
#  roles:
#    - workstations
#
- hosts: web_servers
  gather_facts: false
  tags: web_servers
  become: true
  roles: 
    - web_servers

- hosts: laptops
  gather_facts: false
  tags: laptops
  become: true
  roles: 
    - laptops

- hosts: whos_on_my_network
  gather_facts: false
  tags: whos_on_my_network
  become: true
  roles: 
    - whos_on_my_network


- hosts: watchdog
  vars_files:
  - ~/ansible/vault.yml
  gather_facts: false
  tags: watchdog
  become: true
  roles: 
    - watchdog

- hosts: db_servers
  vars_files:
  - ~/ansible/vault.yml
  #gather_facts: false
  tags: db_servers
  become: true
  roles:
  - db_servers

- hosts: monitor
  vars_files:
  - ~/ansible/vault.yml
  gather_facts: false
  tags: monitor
  become: true
  roles: 
    - monitor
    
- hosts: windows
  gather_facts: true
  tags: windows
  become: true
  roles:
    - windows

#
#- hosts: file_servers
#  tags: file_servers
#  become: true
#  roles:
#    - file_servers

##-------------------------------------------------
#- hosts: all
#  become: true
#  vars_files:
#  - ~/ansible/info.yml
#
#  pre_tasks:
#
##  - debug:
##      var: ansible_facts["cmdline"]
##  - debug:
##      var: ansible_facts["machine"]
##  - debug:
##      var: ansible_facts["machine"]|type_debug
##  - debug:
##      var: ansible_distribution
