---

# ap --tags=monitor --skip-tags=always
#- name: "install some packages"
#  package:
#    name: npm
#    state: latest

- name: Install a php package 
  tags: debug72
  community.general.composer:
    #command: remove
    command: require
    arguments: phpunit/phpunit
    working_dir: "/var/www/{{ http_host }}"
    #global_command: yes

- name: Create document root
  file:
    path: "/var/www/{{ http_host }}"
    state: directory
    owner: "{{ app_user }}"
    mode: '0755'

- name: install repo monitor for toto
  tags: repomon
  ansible.builtin.git: repo={{ item.repo }} dest={{ item.dest }} clone=yes update=yes force=yes
  with_items:
  - { repo: 'https://github.com/toto240325/monitor.git', dest: '/var/www/{{ http_host }}' }
  register: repo_monitor

- name: "Copy params.php"
  tags: debug_copy_params_mon
  template:
    src: "files/params.php.j2"
    dest: "/var/www/{{ http_host }}/params.php"

- name: change ownership
  tags: repomon
  file: path={{ item.path }} owner="toto" group="toto" state=directory recurse=yes mode="u=rwX,g=rX,o=rX"
  with_items:
  - { path: "/var/www/{{ http_host }}" }
  #register: output_chown
  when: repo_monitor.changed

- name: cron job to update the git repository
  tags: pull_monitor
  cron:
    user: root
    name: "pull_monitor"
    special_time: reboot
    # minute: "24"
    # hour: "21"
    job: "cd /var/www/monitor && git pull >> /root/misc.log"
  # when: ansible_facts["lsb"]["id"] != "Raspbian"


# - name: "initialise DB in separate location (makes sense only for sqlite, note mysql)"
#   file: 
#     path: /home/toto/db
#     state: directory
#     owner: toto
#     group: toto
#   when: repo_monitor.changed

- name: Set up Apache virtualhost
  template:
    src: "files/apache.conf.j2"
    dest: "/etc/apache2/sites-available/{{ http_conf }}"

- name: Enable new site
  shell: /usr/sbin/a2ensite {{ http_conf }}
  notify: Reload Apache

- name: Disable default Apache site
  shell: /usr/sbin/a2dissite 000-default.conf
  when: disable_default
  notify: Reload Apache

- name: "UFW - Allow HTTP on port {{ http_port }}"
  ufw:
    rule: allow
    port: "{{ http_port }}"
    proto: tcp


- name: check if mydatabase already exists
  tags: db_servers5
  stat:
    path: "/var/www/{{ http_host }}/mydatabase.sql"
  register: mydatabase_exists

- name: Create mysql database
  tags: db_servers5
  mysql_db:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    login_user: 'toto'
    login_password: "{{ vault_mysql_toto_pw }}"
    name: "mydatabase"
    state: import
    #target: /home/toto/monitor/mydatabase.sql
    target: "/var/www/{{ http_host }}/mydatabase.sql"
  when: not mydatabase_exists

#- name: cron job to launch whos_on_my_network watcher under root
#  cron:
#    user: root
#    name: "cron whos_on_my_network watcher"
#    special_time: reboot
#    #minute: "*/10"
#    job: ". /home/toto/whos_on_my_network/run_whos_watcher >> /root/whos_on_my_network_watcher.log"
#
#- name: cron job to launch whos_on_my_network webserver under root
#  cron:
#    user: root
#    name: "cron whos_on_my_network_webserver"
#    special_time: reboot
#    #minute: "*/10"
#    job: ". /home/toto/whos_on_my_network/run_whos_webserver >> /root/whos_on_my_network_webserver.log"


